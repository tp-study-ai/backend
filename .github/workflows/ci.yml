name: ci

on: [push, pull_request]

jobs:
  send_message_1:
    runs-on: ubuntu-latest
    steps:
      - name: send message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: 1/3 ${{ github.repository }} start!

  build:
    #    if: github.ref == 'refs/heads/dev'
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Login to DockerHub Registry
        run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Build Docker image back
        run: docker build -f=Dockerfile -t yutfut/back:${GITHUB_SHA::8} .

      - name: Push the image baсk
        run: docker push yutfut/back:${GITHUB_SHA::8}

  send_message_2:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: send message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: 2/3 ${{ github.repository }} build done!

#  linter:
#    name: Linter
#    runs-on: ubuntu-latest
#    steps:
#      - name: Set up Go
#        uses: actions/setup-go@v2
#        with:
#          go-version: 1.19
#
#      - name: Checkout code
#        uses: actions/checkout@v2
#
#      - name: Install Dependecies
#        run: go get ./...
#
#      - name: Go mod tidy
#        run: go mod tidy
#
#      - name: Install GolangCI-Lint
#        run: go get github.com/golangci/golangci-lint/cmd/golangci-lint@v1.42.1
#
#      - name: Run GolangCI-Lint
#        run: go run github.com/golangci/golangci-lint/cmd/golangci-lint run ./...

  test-coverage:
    name: Tests
    runs-on: ubuntu-latest
#    needs: linter
    steps:
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.19

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Dependecies
        run: go get ./...

      - name: Go mod tidy
        run: go mod tidy

      - name: Test
        run: go test ./...

      - name: Coverage tests
        run: |
          go test ./... --cover  --coverpkg ./... --coverprofile cover.out
          cat cover.out | grep -v ".pb.go"|grep -v "mock"|grep -v "easyjson" > cover_without_gen.out
      - name: Print total coverage
        run: go tool cover -func cover_without_gen.out

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          envs: GITHUB_SHA
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          script: |
            cd infrastructure/
            sudo docker-compose stop
            sudo docker-compose down
            sudo docker rm -f $(sudo docker ps -aq)
            rm .env
            touch .env
            echo VERSION=${GITHUB_SHA::8} >> .env
            sudo docker-compose up -d

  send_message_3:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: send message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: 3/4 ${{ github.repository }} deploy done!

  fillingDB:
    name: Filling DB
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          envs: GITHUB_SHA
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          script: |
            cd infrastructure/
            python3 main.py

  send_message_4:
    runs-on: ubuntu-latest
    needs: fillingDB
    steps:
      - name: send message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            3/3 ${{ github.repository }} successes!

            -*//*- https://study-ai.ru -*//*-